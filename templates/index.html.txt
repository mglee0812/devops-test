<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title }}</title>
    <link rel="stylesheet" href="/static/style.css">
</head>
<body>
    <div class="container">
        <header>
            <h1>🚀 FastAPI 웹 애플리케이션</h1>
            <p>DevOps CI/CD 파이프라인 데모</p>
        </header>

        <main>
            <section class="info-card">
                <h2>📊 서버 상태</h2>
                <div id="server-info">로딩 중...</div>
            </section>

            <section class="items-card">
                <h2>🛍️ 상품 목록</h2>
                <div id="items-list">로딩 중...</div>
            </section>

            <section class="calculator-card">
                <h2>🔢 계산기</h2>
                <div class="calculator">
                    <input type="number" id="num1" placeholder="숫자 1" value="10">
                    <select id="operation">
                        <option value="add">+</option>
                        <option value="subtract">-</option>
                        <option value="multiply">×</option>
                        <option value="divide">÷</option>
                    </select>
                    <input type="number" id="num2" placeholder="숫자 2" value="5">
                    <button onclick="calculate()">계산</button>
                </div>
                <div id="calc-result"></div>
            </section>

            <section class="api-docs">
                <h2>📖 API 문서</h2>
                <p>자동 생성된 API 문서를 확인하세요:</p>
                <div class="links">
                    <a href="/docs" target="_blank">Swagger UI (/docs)</a>
                    <a href="/redoc" target="_blank">ReDoc (/redoc)</a>
                </div>
            </section>
        </main>

        <footer>
            <p>Powered by FastAPI | Built with ❤️ for DevOps</p>
        </footer>
    </div>

    <script>
        // 서버 정보 가져오기
        async function fetchServerInfo() {
            try {
                const response = await fetch('/api/info');
                const data = await response.json();
                document.getElementById('server-info').innerHTML = `
                    <ul>
                        <li><strong>앱 이름:</strong> ${data.app_name}</li>
                        <li><strong>버전:</strong> ${data.version}</li>
                        <li><strong>프레임워크:</strong> ${data.framework}</li>
                        <li><strong>총 상품 수:</strong> ${data.total_items}개</li>
                    </ul>
                `;
            } catch (error) {
                document.getElementById('server-info').innerHTML = 
                    '<p style="color: red;">서버 정보를 불러올 수 없습니다.</p>';
            }
        }

        // 상품 목록 가져오기
        async function fetchItems() {
            try {
                const response = await fetch('/api/items');
                const items = await response.json();
                const itemsHTML = items.map(item => `
                    <div class="item">
                        <h3>${item.name}</h3>
                        <p>${item.description || '설명 없음'}</p>
                        <p class="price">${item.price.toLocaleString()}원</p>
                    </div>
                `).join('');
                document.getElementById('items-list').innerHTML = itemsHTML;
            } catch (error) {
                document.getElementById('items-list').innerHTML = 
                    '<p style="color: red;">상품 목록을 불러올 수 없습니다.</p>';
            }
        }

        // 계산기
        async function calculate() {
            const a = document.getElementById('num1').value;
            const b = document.getElementById('num2').value;
            const operation = document.getElementById('operation').value;
            
            try {
                const response = await fetch(
                    `/api/calculate?a=${a}&b=${b}&operation=${operation}`
                );
                const data = await response.json();
                document.getElementById('calc-result').innerHTML = `
                    <p class="result">결과: <strong>${data.result}</strong></p>
                `;
            } catch (error) {
                document.getElementById('calc-result').innerHTML = 
                    '<p style="color: red;">계산 오류</p>';
            }
        }

        // 페이지 로드시 실행
        window.onload = () => {
            fetchServerInfo();
            fetchItems();
        };
    </script>
</body>
</html>